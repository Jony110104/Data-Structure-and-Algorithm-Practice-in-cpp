#include <iostream>

using namespace std;



class StackNode
{
public:
    int data;
    StackNode* next;
};

StackNode* newNode (int data)
{

    StackNode* stackNode = new StackNode();
    stackNode -> data = data;
    stackNode -> next = NULL;
    return stackNode;
}



int isEmpty (StackNode* root)
{
    return !root;
}

void push(StackNode** root, int data )
{

    StackNode* StackNode = newNode(data);
    StackNode -> next = *root;
    *root = StackNode;
    cout << data << "Pushed to stack\n";


}


int pop (StackNode** root)
{

    if(isEmpty(*root))
        return INT_MIN;
    StackNode* temp = *root;
    *root = (*root) -> next;
    int poped = temp -> data;
    free(temp);

    return poped;

}


int peek(StackNode* root)
{

    if(isEmpty(root))
        return INT_MIN;
    return root -> data;


}







int main()
{
    StackNode* root = NULL;

    push(&root, 10);
    push(&root, 20);
    push(&root, 30);
    push(&root, 40);


    cout << pop(&root) << "Popped from stack \n";
    cout << "Elements present in stack : ";

    while(!isEmpty(root))
    {
        cout << peek(root) << ' ';
        pop(&root);
    }




    return 0;
}
